% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/FIB.R
\name{FIBoptim}
\alias{FIBoptim}
\title{FIBoptim: Forward, Improvement, and Backward Optimization Method}
\usage{
FIBoptim(fobj, D, size, nF = 100, nI = 100, nLHS = 1000, isMax = TRUE)
}
\arguments{
\item{fobj}{A function representing the objective function to be optimized.}

\item{D}{A numeric matrix where each row represents the range min, max for a design variable.}

\item{size}{The target size for the final design (number of rows).}

\item{nF}{The number of forward iterations. Default is 100.}

\item{nI}{The number of improvement iterations. Default is 100.}

\item{nLHS}{The number of Latin Hypercube Samples (LHS) to generate. Default is 1000.}

\item{isMax}{Logical. If TRUE, the algorithm maximizes the objective function; if FALSE, it minimizes it. Default is TRUE.}
}
\value{
An updated DOEoptim object with the optimal design (\code{Xopt}) and corresponding criterion value (\code{Copt}).
}
\description{
This function implements a three-step optimization process-Forward, Improvement, and Backward (FIB)-to optimize a design criterion.
The method sequentially explores the design space to find an optimal design within a given domain.
}
\examples{
fobj <- function(X){return(det(t(X)\%*\%X))}
D <- matrix(c(0, 10, 0, 5), ncol = 2, byrow = TRUE)
R <- FIBoptim(fobj, D, size=10, nF=100, nI=100, nLHS=500, isMax = TRUE)

print(R$Xopt)
print(R$Copt)
}
