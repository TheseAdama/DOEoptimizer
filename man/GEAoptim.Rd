% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GEA.R
\name{GEAoptim}
\alias{GEAoptim}
\title{Genetic Evolutionary Algorithm Optimization Method}
\usage{
GEAoptim(fobj, size, D, maxiter, Np, ps = 0.5, pm = 0.1, isMax = TRUE)
}
\arguments{
\item{fobj}{A function representing the objective function to be optimized. It should accept a matrix as input where each row is a different set of design.}

\item{size}{An integer specifying the number of points in each population (i.e., the population size).}

\item{D}{A matrix where each row specifies the lower and upper bounds for each dimension of the design space.}

\item{maxiter}{An integer specifying the maximum number of iterations (generations) for the genetic algorithm. Default is 1000.}

\item{Np}{An integer specifying the number of individuals in the population. Default is 100.}

\item{ps}{A numeric value between 0 and 1 specifying the proportion of the population to be selected for breeding (selection rate). Default is 0.5.}

\item{pm}{A numeric value between 0 and 1 specifying the mutation probability. Default is 0.1.}

\item{isMax}{A logical value indicating whether the objective function should be maximized (\code{TRUE}) or minimized (\code{FALSE}). Default is \code{TRUE}.}
}
\value{
The function returns a list contain:
\item{Xopt}{The optimal design matrix found by the algorithm.}
\item{Copt}{The corresponding objective function value at the optimal design.}
}
\description{
The \code{GEAoptim} function implements a genetic algorithm for optimizing a given objective function.
The algorithm is designed to operate within the context of design of experiments.
The function supports both maximization and minimization of the objective function.
}
\details{
The genetic algorithm works by iteratively evolving a population of candidate solutions to an optimization problem.
In each iteration (generation), the following steps are performed:
\enumerate{
\item \strong{Initialization}: The population is initialized with random solutions within the bounds specified by \code{D}.
\item \strong{Evaluation}: Each individual in the population is evaluated using the objective function.
\item \strong{Selection}: A subset of the population is selected based on their fitness (objective function value).
\item \strong{Crossover}: New individuals (offspring) are generated by combining parts of selected individuals (parents).
\item \strong{Mutation}: Some individuals undergo random mutations to introduce diversity.
\item \strong{Replacement}: The old population is replaced with the new one, and the process repeats.
}

The algorithm stops after a specified number of iterations or when convergence criteria are met.
The best solution found during the process is returned as the result.
}
\examples{
\dontrun{
# Define the objective function
fobj <- function(X){return(log(det(t(X)\%*\%X)))}

# Define the design space
D <- matrix(c(0, 10, 0, 5), ncol = 2, byrow = TRUE)

# Run the genetic algorithm optimization
R <- GEAoptim(fobj, size=10, D=D, maxiter=1000, Np=1000, ps=0.25, pm=0.25, isMax=TRUE)

# Access the results
print(R$Xopt)
print(R$Copt)
}

}
\references{
\itemize{
\item Huan, Xun and Marzouk, Youssef M, "Simulation-based optimal Bayesian experimental
design for nonlinear systems", Journal of Computational Physics (2013), 288-317.
\item J. C. Spall, "An overview of the simultaneous perturbation method for efficient
optimization", Johns Hopkins APL Technical Digest 19 (1998) 482-492.
\item N. L. Kleinman, J. C. Spall, D. Q. Naiman, "Simulation-based optimization with
stochastic approximation using common random numbers", Management Science
45 (1999) 1570-1578.
\item J. C. Spall, "Multivariate stochastic approximation using a simultaneous perturbation gradient approximation", IEEE Transactions on Automatic Control 37
(1992) 332-341.
}
}
